// Mocks generated by Mockito 5.4.4 from annotations
// in challenge_bento/test/app/core/services/offer_banner/offer_banner_service_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:challenge_bento/app/core/models/models.dart' as _i5;
import 'package:challenge_bento/app/core/repositories/repositories.dart' as _i2;
import 'package:challenge_bento/app/core/services/services.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeOfferBannerRepository_0 extends _i1.SmartFake
    implements _i2.OfferBannerRepository {
  _FakeOfferBannerRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [OfferBannerServiceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockOfferBannerServiceImpl extends _i1.Mock
    implements _i3.OfferBannerServiceImpl {
  @override
  _i2.OfferBannerRepository get offerBannerRepository => (super.noSuchMethod(
        Invocation.getter(#offerBannerRepository),
        returnValue: _FakeOfferBannerRepository_0(
          this,
          Invocation.getter(#offerBannerRepository),
        ),
        returnValueForMissingStub: _FakeOfferBannerRepository_0(
          this,
          Invocation.getter(#offerBannerRepository),
        ),
      ) as _i2.OfferBannerRepository);

  @override
  _i4.Future<List<_i5.OfferBannerModel>> getAllOfferBanners() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllOfferBanners,
          [],
        ),
        returnValue: _i4.Future<List<_i5.OfferBannerModel>>.value(
            <_i5.OfferBannerModel>[]),
        returnValueForMissingStub: _i4.Future<List<_i5.OfferBannerModel>>.value(
            <_i5.OfferBannerModel>[]),
      ) as _i4.Future<List<_i5.OfferBannerModel>>);
}
